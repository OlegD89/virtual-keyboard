{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/Input.js","webpack:///./js/Keyboard.js","webpack:///./js/Keys.js","webpack:///./js/Layout.js","webpack:///./js/Settings.js","webpack:///./js/main.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACF;AACU;;AAEvB;AACf;AACA,uBAAuB,+CAAM;AAC7B,yBAAyB,kDAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,8CAAK;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7JA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe;AACfeAAe;AACf,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,IAAI;AACJ;AACA;AACA,iBAAiB;AACjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AChVA;AAAA;AAAA;AAAwC;;AAEzB;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,oDAAc,SAAS,oDAAc;AACrD;AACA;AACA;;AAEA;AACA,gBAAgB,oDAAc,SAAS,oDAAc;AACrD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5KA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AAAA;AAAkC;;AAElC;AACA,uBAAuB,iDAAQ;AAC/B;AACA;AACA","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* eslint-disable no-param-reassign */\nexport default class Input {\n  constructor(input, keys) {\n    this._body = document.querySelector('body');\n    this._input = input;\n    this._keys = keys;\n  }\n\n  // #region public methods\n  pressKey(keyCode, isPress) {\n    const keyElement = this._keys[keyCode].element;\n    if (isPress) {\n      keyElement.classList.add('key_press');\n    } else {\n      keyElement.classList.remove('key_press');\n    }\n  }\n\n  print(keyCode) {\n    this._input.focus();\n    const key = this._keys[keyCode];\n    let { selectionStart } = this._input;\n    if (!key.element.classList.contains('special')) {\n      this._input.value = this._setChar(key.text);\n    } else {\n      switch (keyCode) {\n        case 'Backspace':\n          this._input.value = this._getTextBeforePosition().slice(0, -1)\n                        + this._getTextAfterPosition();\n          selectionStart -= 2;\n          break;\n        case 'Tab':\n          this._input.value = this._setChar('\\t');\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n          this._input.value = this._setChar('\\n');\n          break;\n        case 'Delete':\n          this._input.value = this._getTextBeforePosition()\n                        + this._getTextAfterPosition().slice(1);\n          selectionStart -= 1;\n          break;\n        case 'ArrowLeft':\n          this._input.selectionStart -= 1;\n          this._input.selectionEnd -= 1;\n          return;\n        case 'ArrowRight':\n          this._input.selectionStart += 1;\n          return;\n        case 'ArrowUp':\n          this._setCurrentPositionUp();\n          return;\n        case 'ArrowDown':\n          this._setCurrentPositionDown();\n          return;\n        default:\n          return;\n      }\n    }\n    selectionStart += 1;\n    this._input.setSelectionRange(selectionStart, selectionStart);\n  }\n\n  setShift(isShift, isCapsLock) {\n    const getProperty = isShift ? this._language.nameShift : this._language.nameUnShift;\n    const keys = this._getKeysArray().filter((o) => o[1][getProperty]);\n    keys.forEach((key) => {\n      const char = key[1][getProperty];\n      const element = key[1].element.firstElementChild;\n      element.textContent = char;\n      key[1].text = char;\n    });\n    this.setCapsLock(isCapsLock, isShift);\n  }\n\n  setCapsLock(isCapsLock, isShift) {\n    const getPropertyChar = this._language.name;\n    const keysChar = this._getKeysArray().filter((o) => o[1][getPropertyChar]);\n    keysChar.forEach((key) => {\n      let char = key[1][getPropertyChar];\n      // eslint-disable-next-line no-bitwise\n      char = isShift ^ isCapsLock ? char.toUpperCase() : char.toLowerCase();\n      const element = key[1].element.firstElementChild;\n      element.textContent = char;\n      key[1].text = char;\n    });\n  }\n\n  changeLanguage(language, isShift, isCapsLock) {\n    this._language = language;\n    this.setShift(isShift, isCapsLock);\n  }\n\n  getKeyCodeByElement(elementKey) {\n    const keyCurrent = this._getKeysArray().find((key) => key[1].element === elementKey);\n    return keyCurrent[0];\n  }\n  // #endregion public methods\n\n  // #region private methods\n  _getKeysArray() {\n    return Object.entries(this._keys);\n  }\n\n  _setCurrentPositionUp() {\n    const text = this._input.value;\n    const rows = text.split('\\n');\n    const currentPosition = this._input.selectionStart;\n    const indicesEndRows = Input._getIndicesEndRows(text);\n    const currentRow = Input._getCurrentRowIndex(indicesEndRows, currentPosition);\n\n    let newPosition;\n    if (currentRow === 0) {\n      newPosition = 0;\n    } else {\n      newPosition = currentPosition - rows[currentRow - 1].length - 1; // 1='\\n'\n      if (newPosition > indicesEndRows[currentRow - 1]) {\n        newPosition = indicesEndRows[currentRow - 1];\n      }\n    }\n    this._input.setSelectionRange(newPosition, newPosition);\n  }\n\n  _setCurrentPositionDown() {\n    const text = this._input.value;\n    const rows = text.split('\\n');\n    const currentPosition = this._input.selectionStart;\n    const indicesEndRows = Input._getIndicesEndRows(text);\n    const currentRow = Input._getCurrentRowIndex(indicesEndRows, currentPosition);\n\n    let newPosition;\n    if (currentRow === indicesEndRows.length - 1) {\n      newPosition = indicesEndRows[indicesEndRows.length - 1];\n    } else {\n      newPosition = currentPosition + rows[currentRow].length + 1; // 1='\\n'\n      if (newPosition > indicesEndRows[currentRow + 1]) {\n        newPosition = indicesEndRows[currentRow + 1];\n      }\n    }\n    this._input.setSelectionRange(newPosition, newPosition);\n  }\n\n  static _getIndicesEndRows(text) {\n    const regex = /\\n/gi;\n    let result;\n    const indicesEndRows = [];\n    // eslint-disable-next-line no-cond-assign\n    while ((result = regex.exec(text))) {\n      indicesEndRows.push(result.index);\n    }\n    indicesEndRows.push(text.length);\n    return indicesEndRows;\n  }\n\n  static _getCurrentRowIndex(indicesEndRows, currentPosition) {\n    let currentRow;\n    for (let i = 0; i < indicesEndRows.length; i += 1) {\n      if (indicesEndRows[i] >= currentPosition) {\n        currentRow = i;\n        break;\n      }\n    }\n    return currentRow;\n  }\n\n  _setChar(text) {\n    return this._getTextBeforePosition() + text + this._getTextAfterPosition();\n  }\n\n  _getTextBeforePosition() {\n    return this._input.value.slice(0, this._input.selectionStart);\n  }\n\n  _getTextAfterPosition() {\n    return this._input.value.slice(this._input.selectionStart);\n  }\n  // #endregion private methods\n}\n","import Layout from './Layout';\nimport Input from './Input';\nimport { Settings } from './Settings';\n\nexport default class Keyboard {\n  constructor() {\n    this._layout = new Layout();\n    this._settings = new Settings();\n    this._input = undefined;\n    this._keys = {};\n    this._keyStickingForMouse = {\n      isCapsLock: undefined,\n      specialKeys: [],\n    };\n    this._isCapsLockMouse = false;\n  }\n\n  // #region public methods\n  init() {\n    this._settings.load();\n    const layoutResult = this._layout.create(this._settings.getLanguage());\n    this._input = new Input(layoutResult.input, layoutResult.keys);\n  }\n\n  run() {\n    const that = this;\n    document.addEventListener('keydown', (event) => {\n      that._keyDownEvent(event.code, event);\n      event.preventDefault();\n    });\n    document.addEventListener('keyup', (event) => {\n      that._keyUpEvent(event.code, event);\n    });\n    document.querySelector('.keyboard').addEventListener('click', (e) => {\n      // eslint-disable-next-line no-nested-ternary\n      const elementKey = e.target.classList.contains('key')\n        ? e.target\n        : e.target.classList.contains('key__text')\n          ? e.target.parentElement\n          : null;\n      if (!elementKey) return;\n\n      const keyCode = that._input.getKeyCodeByElement(elementKey);\n      that._keyMouseClickEvent(keyCode);\n    });\n  }\n  // #endregion public methods\n\n\n  // #region private methods\n  _keyDownEvent(eventCode, event) {\n    if (!this._keys[eventCode]) {\n      this._keys[eventCode] = true;\n      this._input.pressKey(eventCode, true);\n      this._setSettings(event.shiftKey, event.getModifierState('CapsLock'));\n    }\n    this._input.print(eventCode);\n  }\n\n  _keyUpEvent(eventCode, event) {\n    if (this._keys[eventCode]) {\n      this._keys[eventCode] = undefined;\n      const isCapsLock = event.getModifierState('CapsLock');\n      if (eventCode !== 'CapsLock' || !isCapsLock) {\n        this._input.pressKey(eventCode, false);\n      }\n      this._setSettings(event.shiftKey, isCapsLock);\n\n      if (this._checkChangeLanguage(eventCode)) {\n        const language = this._settings.changeAndGetLanguage();\n        this._input.changeLanguage(language, event.shiftKey, isCapsLock);\n      }\n\n      this._fixTwoShiftKeyUpEvent(event);\n    }\n  }\n\n  _keyMouseClickEvent(eventCode) {\n    if (eventCode === 'CapsLock') this._isCapsLockMouse = !this._isCapsLockMouse;\n    const isCapsLock = this._isCapsLockMouse;\n\n    const customEvent = {\n      getModifierState: () => isCapsLock,\n      shiftKey: window.event.shiftKey || this._checkStickingShiftForMouse(),\n      isMouseEvent: true,\n    };\n    if (Keyboard._checkShift(eventCode) || Keyboard._checkControl(eventCode)\n        || Keyboard._checkAlt(eventCode)) {\n      if (this._keyStickingForMouse.specialKeys.includes(eventCode)) {\n        this._keyStickingForMouse.specialKeys = this._keyStickingForMouse\n          .specialKeys.filter((o) => o !== eventCode);\n        if (Keyboard._checkShift(eventCode)) {\n          customEvent.shiftKey = window.event.shiftKey || this._checkStickingShiftForMouse();\n        }\n        this._keyUpEvent(eventCode, customEvent);\n      } else {\n        this._keyStickingForMouse.specialKeys.push(eventCode);\n        customEvent.shiftKey = window.event.shiftKey || this._checkStickingShiftForMouse();\n        this._keyDownEvent(eventCode, customEvent);\n      }\n    } else {\n      this._keyDownEvent(eventCode, customEvent);\n      customEvent.shiftKey = window.event.shiftKey;\n      this._keyUpEvent(eventCode, customEvent);\n      if (this._keyStickingForMouse.specialKeys.length) {\n        this._keyStickingForMouse.specialKeys.forEach((specialKey) => {\n          this._keyUpEvent(specialKey, customEvent);\n        });\n        this._keyStickingForMouse.specialKeys = [];\n      }\n    }\n  }\n\n  _setSettings(isShift, isCapsLock) {\n    if (this._settings.changeSettingsShift(isShift)) {\n      this._input.setShift(isShift, isCapsLock);\n    }\n    if (this._settings.changeSettingsCaps(isCapsLock)) {\n      this._input.setCapsLock(isCapsLock, isShift);\n    }\n  }\n\n  _checkChangeLanguage(eventCode) {\n    return (Keyboard._checkShift(eventCode) && (this._keys.ControlLeft || this._keys.ControlRight))\n     || (Keyboard._checkControl(eventCode) && (this._keys.ShiftLeft || this._keys.ShiftRight));\n  }\n\n  static _checkShift(eventCode) {\n    return eventCode === 'ShiftLeft' || eventCode === 'ShiftRight';\n  }\n\n  static _checkControl(eventCode) {\n    return eventCode === 'ControlLeft' || eventCode === 'ControlRight';\n  }\n\n  static _checkAlt(eventCode) {\n    return eventCode === 'AltLeft' || eventCode === 'AltRight';\n  }\n\n  _checkStickingShiftForMouse() {\n    return this._keyStickingForMouse.specialKeys.includes('ShiftLeft')\n    || this._keyStickingForMouse.specialKeys.includes('ShiftRight');\n  }\n\n  _fixTwoShiftKeyUpEvent(event) {\n    if (!event.shiftKey) {\n      if (this._keys.ShiftLeft) {\n        this._input.pressKey('ShiftLeft', false);\n        this._keys.ShiftLeft = undefined;\n      }\n      if (this._keys.ShiftRight) {\n        this._input.pressKey('ShiftRight', false);\n        this._keys.ShiftRight = undefined;\n      }\n    }\n  }\n  // #endregion private methods\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport const keysDictionary = {\n  '`': {\n    keyCode: 'Backquote',\n    ru: 'ё',\n    enUnShift: '`',\n    enShift: '~',\n  },\n  1: {\n    keyCode: 'Digit1',\n    ruUnShift: '1',\n    ruShift: '!',\n    enUnShift: '1',\n    enShift: '!',\n  },\n  2: {\n    keyCode: 'Digit2',\n    ruUnShift: '2',\n    ruShift: '\"',\n    enUnShift: '2',\n    enShift: '@',\n  },\n  3: {\n    keyCode: 'Digit3',\n    ruUnShift: '3',\n    ruShift: '№',\n    enUnShift: '3',\n    enShift: '#',\n  },\n  4: {\n    keyCode: 'Digit4',\n    ruUnShift: '4',\n    ruShift: ';',\n    enUnShift: '4',\n    enShift: '$',\n  },\n  5: {\n    keyCode: 'Digit5',\n    ruUnShift: '5',\n    ruShift: '%',\n    enUnShift: '5',\n    enShift: '%',\n  },\n  6: {\n    keyCode: 'Digit6',\n    ruUnShift: '6',\n    ruShift: ':',\n    enUnShift: '6',\n    enShift: '^',\n  },\n  7: {\n    keyCode: 'Digit7',\n    ruUnShift: '7',\n    ruShift: '?',\n    enUnShift: '7',\n    enShift: '&',\n  },\n  8: {\n    keyCode: 'Digit8',\n    ruUnShift: '8',\n    ruShift: '*',\n    enUnShift: '8',\n    enShift: '*',\n  },\n  9: {\n    keyCode: 'Digit9',\n    ruUnShift: '9',\n    ruShift: '(',\n    enUnShift: '9',\n    enShift: '(',\n  },\n  0: {\n    keyCode: 'Digit0',\n    ruUnShift: '0',\n    ruShift: ')',\n    enUnShift: '0',\n    enShift: ')',\n  },\n  '-': {\n    keyCode: 'Minus',\n    ruUnShift: '-',\n    ruShift: '_',\n    enUnShift: '-',\n    enShift: '_',\n  },\n  '=': {\n    keyCode: 'Equal',\n    ruUnShift: '=',\n    ruShift: '+',\n    enUnShift: '=',\n    enShift: '+',\n  },\n  Backspace: {\n    keyCode: 'Backspace',\n  },\n  Tab: {\n    keyCode: 'Tab',\n  },\n  q: {\n    keyCode: 'KeyQ',\n    ru: 'й',\n    en: 'q',\n  },\n  w: {\n    keyCode: 'KeyW',\n    ru: 'ц',\n    en: 'w',\n  },\n  e: {\n    keyCode: 'KeyE',\n    ru: 'у',\n    en: 'e',\n  },\n  r: {\n    keyCode: 'KeyR',\n    ru: 'к',\n    en: 'r',\n  },\n  t: {\n    keyCode: 'KeyT',\n    ru: 'е',\n    en: 't',\n  },\n  y: {\n    keyCode: 'KeyY',\n    ru: 'н',\n    en: 'y',\n  },\n  u: {\n    keyCode: 'KeyU',\n    ru: 'г',\n    en: 'u',\n  },\n  i: {\n    keyCode: 'KeyI',\n    ru: 'ш',\n    en: 'i',\n  },\n  o: {\n    keyCode: 'KeyO',\n    ru: 'щ',\n    en: 'o',\n  },\n  p: {\n    keyCode: 'KeyP',\n    ru: 'з',\n    en: 'p',\n  },\n  '[': {\n    keyCode: 'BracketLeft',\n    ru: 'х',\n    enUnShift: '[',\n    enShift: '{',\n  },\n  ']': {\n    keyCode: 'BracketRight',\n    ru: 'ъ',\n    enUnShift: ']',\n    enShift: '}',\n  },\n  '\\\\': {\n    keyCode: 'Backslash',\n    ruUnShift: '\\\\',\n    ruShift: '/',\n    enUnShift: '\\\\',\n    enShift: '|',\n  },\n  CapsLock: {\n    keyCode: 'CapsLock',\n  },\n  a: {\n    keyCode: 'KeyA',\n    ru: 'ф',\n    en: 'a',\n  },\n  s: {\n    keyCode: 'KeyS',\n    ru: 'ы',\n    en: 's',\n  },\n  d: {\n    keyCode: 'KeyD',\n    ru: 'в',\n    en: 'd',\n  },\n  f: {\n    keyCode: 'KeyF',\n    ru: 'а',\n    en: 'f',\n  },\n  g: {\n    keyCode: 'KeyG',\n    ru: 'п',\n    en: 'g',\n  },\n  h: {\n    keyCode: 'KeyH',\n    ru: 'р',\n    en: 'h',\n  },\n  j: {\n    keyCode: 'KeyJ',\n    ru: 'о',\n    en: 'j',\n  },\n  k: {\n    keyCode: 'KeyK',\n    ru: 'л',\n    en: 'k',\n  },\n  l: {\n    keyCode: 'KeyL',\n    ru: 'д',\n    en: 'l',\n  },\n  ';': {\n    keyCode: 'Semicolon',\n    ru: 'ж',\n    enUnShift: ';',\n    enShift: ':',\n  },\n  '\\'': {\n    keyCode: 'Quote',\n    ru: 'э',\n    enUnShift: '\\'',\n    enShift: '\"',\n  },\n  ShiftLeft: {\n    keyCode: 'ShiftLeft',\n  },\n  z: {\n    keyCode: 'KeyZ',\n    ru: 'я',\n    en: 'z',\n  },\n  x: {\n    keyCode: 'KeyX',\n    ru: 'ч',\n    en: 'x',\n  },\n  c: {\n    keyCode: 'KeyC',\n    ru: 'с',\n    en: 'c',\n  },\n  v: {\n    keyCode: 'KeyV',\n    ru: 'м',\n    en: 'v',\n  },\n  b: {\n    keyCode: 'KeyB',\n    ru: 'и',\n    en: 'b',\n  },\n  n: {\n    keyCode: 'KeyN',\n    ru: 'т',\n    en: 'n',\n  },\n  m: {\n    keyCode: 'KeyM',\n    ru: 'ь',\n    en: 'm',\n  },\n  ',': {\n    keyCode: 'Slash',\n    ru: 'б',\n    enUnShift: ',',\n    enShift: '<',\n  },\n  '.': {\n    keyCode: 'Period',\n    ru: 'ю',\n    enUnShift: '.',\n    enShift: '>',\n  },\n  '/': {\n    keyCode: 'Comma',\n    ruUnShift: '.',\n    ruShift: ',',\n    enUnShift: '/',\n    enShift: '?',\n  },\n  Enter: {\n    keyCode: 'Enter',\n  },\n  NumpadEnter: {\n    keyCode: 'Enter',\n  },\n  Delete: {\n    keyCode: 'Delete',\n  },\n  ShiftRight: {\n    keyCode: 'ShiftRight',\n  },\n  ControlLeft: {\n    keyCode: 'ControlLeft',\n  },\n  MetaLeft: {\n    keyCode: 'MetaLeft',\n  },\n  AltLeft: {\n    keyCode: 'AltLeft',\n  },\n  Space: {\n    keyCode: 'Space',\n    ru: ' ',\n    en: ' ',\n  },\n  AltRight: {\n    keyCode: 'AltRight',\n  },\n  ControlRight: {\n    keyCode: 'ControlRight',\n  },\n  '▲': {\n    keyCode: 'ArrowUp',\n    ru: '▲',\n    en: '▲',\n  },\n  '◄': {\n    keyCode: 'ArrowLeft',\n    ru: '◄',\n    en: '◄',\n  },\n  '▼': {\n    keyCode: 'ArrowDown',\n    ru: '▼',\n    en: '▼',\n  },\n  '►': {\n    keyCode: 'ArrowRight',\n    ru: '►',\n    en: '►',\n  },\n};\n","import { keysDictionary } from './Keys';\n\nexport default class Layout {\n  constructor() {\n    this._body = document.querySelector('body');\n    this._keys = {};\n  }\n\n  // #region public methods\n  create(language) {\n    this._language = language;\n    const wrapper = Layout._createWrapper();\n    this._body.appendChild(wrapper);\n    const input = Layout._createInput();\n    wrapper.appendChild(input);\n    wrapper.appendChild(this._createKeyboard());\n    wrapper.appendChild(Layout._createDescription());\n\n    return { input, keys: this._keys };\n  }\n  // #endregion public methods\n\n  // #region private methods\n  static _createWrapper() {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('wrapper');\n    return wrapper;\n  }\n\n  static _createInput() {\n    const input = document.createElement('textarea');\n    input.rows = 6;\n    input.cols = 60;\n    input.classList.add('input');\n    return input;\n  }\n\n  _createKeyboard() {\n    const keyboard = document.createElement('div');\n    keyboard.classList.add('keyboard');\n    keyboard.appendChild(this._createKeysRow(1));\n    keyboard.appendChild(this._createKeysRow(2));\n    keyboard.appendChild(this._createKeysRow(3));\n    keyboard.appendChild(this._createKeysRow(4));\n    keyboard.appendChild(this._createKeysRow(5));\n    this._createDublicateKeys();\n    return keyboard;\n  }\n\n  _createKeysRow(rowNumber) {\n    const that = this;\n    const keyboardRow = document.createElement('div');\n    keyboardRow.classList.add('keyboard__row');\n    switch (rowNumber) {\n      case 1: {\n        ['`', 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, '-', '='].forEach((text) => {\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'char'));\n        });\n        keyboardRow.appendChild(that._createKey(this._getKey('Backspace'), 'special', 'backspace'));\n        break;\n      }\n      case 2: {\n        keyboardRow.appendChild(that._createKey(this._getKey('Tab'), 'special', 'tab'));\n        ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'].forEach((text) => {\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'letter'));\n        });\n        ['[', ']', '\\\\'].forEach((text) => {\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'char'));\n        });\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Del', 'Delete'), 'special', 'del'));\n        break;\n      }\n      case 3: {\n        keyboardRow.appendChild(that._createKey(this._getKey('CapsLock'), 'special', 'capslock'));\n        ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'].forEach((text) => {\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'letter'));\n        });\n        [';', '\\''].forEach((text) => {\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'char'));\n        });\n        keyboardRow.appendChild(that._createKey(this._getKey('Enter'), 'special', 'enter'));\n        break;\n      }\n      case 4: {\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Shift', 'ShiftLeft'), 'special', 'shift-left'));\n        ['z', 'x', 'c', 'v', 'b', 'n', 'm'].forEach((text) => {\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'letter'));\n        });\n        [',', '.', '/'].forEach((text) => {\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'char'));\n        });\n        keyboardRow.appendChild(that._createKey(this._getKey('▲'), 'special', 'arrow'));\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Shift', 'ShiftRight'), 'special', 'shift-right'));\n        break;\n      }\n      case 5: {\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Ctrl', 'ControlLeft'), 'special', 'ctrl-left'));\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Win', 'MetaLeft'), 'special', 'win'));\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Alt', 'AltLeft'), 'special', 'alt-left'));\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode(' ', 'Space'), 'space'));\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Alt', 'AltRight'), 'special', 'alt-right'));\n        keyboardRow.appendChild(that._createKey(this._getKey('◄'), 'special', 'arrow'));\n        keyboardRow.appendChild(that._createKey(this._getKey('▼'), 'special', 'arrow'));\n        keyboardRow.appendChild(that._createKey(this._getKey('►'), 'special', 'arrow'));\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Ctrl', 'ControlRight'), 'special', 'ctrl-right'));\n        break;\n      }\n      default:\n        break;\n    }\n    return keyboardRow;\n  }\n\n  _createKey(key, ...additionalClasses) {\n    const keyDiv = document.createElement('div');\n    keyDiv.classList.add('key');\n    if (additionalClasses.length) {\n      additionalClasses.forEach((addClass) => keyDiv.classList.add(addClass));\n    }\n    keyDiv.appendChild(Layout._createKeyText(key.text));\n    // eslint-disable-next-line no-param-reassign\n    key.element = keyDiv;\n    this._keys[key.keyCode] = key;\n    return keyDiv;\n  }\n\n  static _createKeyText(text) {\n    const keySpan = document.createElement('span');\n    keySpan.classList.add('key__text');\n    keySpan.textContent = text;\n    return keySpan;\n  }\n\n  _createDublicateKeys() {\n    this._keys.NumpadEnter = this._keys.Enter;\n    // для задания не требуется, поэтому делаю не совсем верно, для удобства\n    this._keys.Numpad1 = this._keys.Digit1;\n    this._keys.Numpad2 = this._keys.Digit2;\n    this._keys.Numpad3 = this._keys.Digit3;\n    this._keys.Numpad4 = this._keys.Digit4;\n    this._keys.Numpad5 = this._keys.Digit5;\n    this._keys.Numpad6 = this._keys.Digit6;\n    this._keys.Numpad7 = this._keys.Digit7;\n    this._keys.Numpad8 = this._keys.Digit8;\n    this._keys.Numpad9 = this._keys.Digit9;\n    this._keys.Numpad0 = this._keys.Digit0;\n    this._keys.NumpadDivide = this._keys.Slash;\n    // this._keys['NumpadMultiply'] = this._keys[''];\n    this._keys.NumpadSubtract = this._keys.Minus;\n    // this._keys['NumpadAdd'] = this._keys[''];\n    this._keys.NumpadDecimal = this._keys.Period;\n  }\n\n  static _createDescription() {\n    const descriptionSpan = document.createElement('span');\n    descriptionSpan.classList.add('description-text');\n    descriptionSpan.textContent = 'Переключение языка Ctrl+Shift, OS - Windows';\n    return descriptionSpan;\n  }\n\n  _getKey(text) {\n    const key = keysDictionary[text] ? keysDictionary[text] : {};\n    key.text = key[this._language.nameUnShift] || key[this._language.name] || text;\n    return key;\n  }\n\n  _getKeyWithCode(text, code) {\n    const key = keysDictionary[code] ? keysDictionary[code] : {};\n    key.text = key[this._language.nameUnShift] || key[this._language.name] || text;\n    return key;\n  }\n  // #private methods\n}\n","export const languages = {\n  ru: {\n    name: 'ru',\n    nameShift: 'ruShift',\n    nameUnShift: 'ruUnShift',\n  },\n  en: {\n    name: 'en',\n    nameShift: 'enShift',\n    nameUnShift: 'enUnShift',\n  },\n};\nexport class Settings {\n  constructor() {\n    this._isShift = false;\n    this._isCapsLock = false;\n    this._language = languages.en;\n  }\n\n  load() {\n    const language = sessionStorage.getItem('language');\n    switch (language) {\n      case languages.ru.name:\n        this._language = languages.ru;\n        break;\n      default:\n        this._language = languages.en;\n    }\n  }\n\n  changeSettingsShift(isShift) {\n    if (this._isShift !== isShift) {\n      this._isShift = isShift;\n      return true;\n    }\n    return false;\n  }\n\n  changeSettingsCaps(isCapsLock) {\n    if (this.isCapsLock !== isCapsLock) {\n      this.isCapsLock = isCapsLock;\n      return true;\n    }\n    return false;\n  }\n\n  changeAndGetLanguage() {\n    this._language = this._language === languages.en ? languages.ru : languages.en;\n    sessionStorage.setItem('language', this._language.name);\n    return this._language;\n  }\n\n  getLanguage() {\n    return this._language;\n  }\n}\n","import Keyboard from './Keyboard';\n\nwindow.onload = () => {\n  const keyboard = new Keyboard();\n  keyboard.init();\n  keyboard.run();\n};\n"],"sourceRoot":""}