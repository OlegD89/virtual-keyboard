{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/Input.js","webpack:///./js/Keyboard.js","webpack:///./js/Keys.js","webpack:///./js/Layout.js","webpack:///./js/Settings.js","webpack:///./js/main.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrLA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACF;AACU;;AAEvB;AACf;AACA,uBAAuB,+CAAM;AAC7B,yBAAyB,kDAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,8CAAK;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3LA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe;AACfeAAe;AACf,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,IAAI;AACJ;AACA;AACA,iBAAiB;AACjhVA;AAAA;AAAA;AAAwC;;AAEzB;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,oDAAc,SAAS,oDAAc;AACrD;AACA;AACA;;AAEA;AACA,gBAAgB,oDAAc,SAAS,oDAAc;AACrD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5KA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AAAA;AAAkC;;AAElC;AACA,uBAAuB,iDAAQ;AAC/B;AACA;AACA","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* eslint-disable no-param-reassign */\r\nexport default class Input {\r\n  constructor(input, keys, language) {\r\n    this._body = document.querySelector('body');\r\n    this._input = input;\r\n    this._keys = keys;\r\n    this._language = language;\r\n  }\r\n\r\n  // #region public methods\r\n  pressKey(keyCode, isPress) {\r\n    if (!this._keys[keyCode]) { return; }\r\n    const keyElement = this._keys[keyCode].element;\r\n    if (isPress) {\r\n      keyElement.classList.add('key_press');\r\n    } else {\r\n      keyElement.classList.remove('key_press');\r\n    }\r\n  }\r\n\r\n  print(keyCode) {\r\n    if (!this._keys[keyCode]) { return; }\r\n    this._input.focus();\r\n    const key = this._keys[keyCode];\r\n    let { selectionStart } = this._input;\r\n    if (!key.element.classList.contains('special')) {\r\n      this._input.value = this._setChar(key.text);\r\n    } else {\r\n      switch (keyCode) {\r\n        case 'Backspace':\r\n          this._input.value = this._getTextBeforePosition().slice(0, -1)\r\n                        + this._getTextAfterPosition();\r\n          selectionStart -= 2;\r\n          break;\r\n        case 'Tab':\r\n          this._input.value = this._setChar('\\t');\r\n          break;\r\n        case 'Enter':\r\n        case 'NumpadEnter':\r\n          this._input.value = this._setChar('\\n');\r\n          break;\r\n        case 'Delete':\r\n          this._input.value = this._getTextBeforePosition()\r\n                        + this._getTextAfterPosition().slice(1);\r\n          selectionStart -= 1;\r\n          break;\r\n        case 'ArrowLeft':\r\n          this._input.selectionStart -= 1;\r\n          this._input.selectionEnd -= 1;\r\n          return;\r\n        case 'ArrowRight':\r\n          this._input.selectionStart += 1;\r\n          return;\r\n        case 'ArrowUp':\r\n          this._setCurrentPositionUp();\r\n          return;\r\n        case 'ArrowDown':\r\n          this._setCurrentPositionDown();\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n    selectionStart += 1;\r\n    this._input.setSelectionRange(selectionStart, selectionStart);\r\n  }\r\n\r\n  setShift(isShift, isCapsLock) {\r\n    const getProperty = isShift ? this._language.nameShift : this._language.nameUnShift;\r\n    const keys = this._getKeysArray().filter((o) => o[1][getProperty]);\r\n    keys.forEach((key) => {\r\n      const char = key[1][getProperty];\r\n      const element = key[1].element.firstElementChild;\r\n      element.textContent = char;\r\n      key[1].text = char;\r\n    });\r\n    this.setCapsLock(isCapsLock, isShift);\r\n  }\r\n\r\n  setCapsLock(isCapsLock, isShift) {\r\n    const getPropertyChar = this._language.name;\r\n    const keysChar = this._getKeysArray().filter((o) => o[1][getPropertyChar]);\r\n    keysChar.forEach((key) => {\r\n      let char = key[1][getPropertyChar];\r\n      // eslint-disable-next-line no-bitwise\r\n      char = isShift ^ isCapsLock ? char.toUpperCase() : char.toLowerCase();\r\n      const element = key[1].element.firstElementChild;\r\n      element.textContent = char;\r\n      key[1].text = char;\r\n    });\r\n  }\r\n\r\n  changeLanguage(language, isShift, isCapsLock) {\r\n    this._language = language;\r\n    this.setShift(isShift, isCapsLock);\r\n  }\r\n\r\n  getKeyCodeByElement(elementKey) {\r\n    const keyCurrent = this._getKeysArray().find((key) => key[1].element === elementKey);\r\n    return keyCurrent[0];\r\n  }\r\n  // #endregion public methods\r\n\r\n  // #region private methods\r\n  _getKeysArray() {\r\n    return Object.entries(this._keys);\r\n  }\r\n\r\n  _setCurrentPositionUp() {\r\n    const text = this._input.value;\r\n    const rows = text.split('\\n');\r\n    const currentPosition = this._input.selectionStart;\r\n    const indicesEndRows = Input._getIndicesEndRows(text);\r\n    const currentRow = Input._getCurrentRowIndex(indicesEndRows, currentPosition);\r\n\r\n    let newPosition;\r\n    if (currentRow === 0) {\r\n      newPosition = 0;\r\n    } else {\r\n      newPosition = currentPosition - rows[currentRow - 1].length - 1; // 1='\\n'\r\n      if (newPosition > indicesEndRows[currentRow - 1]) {\r\n        newPosition = indicesEndRows[currentRow - 1];\r\n      }\r\n    }\r\n    this._input.setSelectionRange(newPosition, newPosition);\r\n  }\r\n\r\n  _setCurrentPositionDown() {\r\n    const text = this._input.value;\r\n    const rows = text.split('\\n');\r\n    const currentPosition = this._input.selectionStart;\r\n    const indicesEndRows = Input._getIndicesEndRows(text);\r\n    const currentRow = Input._getCurrentRowIndex(indicesEndRows, currentPosition);\r\n\r\n    let newPosition;\r\n    if (currentRow === indicesEndRows.length - 1) {\r\n      newPosition = indicesEndRows[indicesEndRows.length - 1];\r\n    } else {\r\n      newPosition = currentPosition + rows[currentRow].length + 1; // 1='\\n'\r\n      if (newPosition > indicesEndRows[currentRow + 1]) {\r\n        newPosition = indicesEndRows[currentRow + 1];\r\n      }\r\n    }\r\n    this._input.setSelectionRange(newPosition, newPosition);\r\n  }\r\n\r\n  static _getIndicesEndRows(text) {\r\n    const regex = /\\n/gi;\r\n    let result;\r\n    const indicesEndRows = [];\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((result = regex.exec(text))) {\r\n      indicesEndRows.push(result.index);\r\n    }\r\n    indicesEndRows.push(text.length);\r\n    return indicesEndRows;\r\n  }\r\n\r\n  static _getCurrentRowIndex(indicesEndRows, currentPosition) {\r\n    let currentRow;\r\n    for (let i = 0; i < indicesEndRows.length; i += 1) {\r\n      if (indicesEndRows[i] >= currentPosition) {\r\n        currentRow = i;\r\n        break;\r\n      }\r\n    }\r\n    return currentRow;\r\n  }\r\n\r\n  _setChar(text) {\r\n    return this._getTextBeforePosition() + text + this._getTextAfterPosition();\r\n  }\r\n\r\n  _getTextBeforePosition() {\r\n    return this._input.value.slice(0, this._input.selectionStart);\r\n  }\r\n\r\n  _getTextAfterPosition() {\r\n    return this._input.value.slice(this._input.selectionStart);\r\n  }\r\n  // #endregion private methods\r\n}\r\n","import Layout from './Layout';\r\nimport Input from './Input';\r\nimport { Settings } from './Settings';\r\n\r\nexport default class Keyboard {\r\n  constructor() {\r\n    this._layout = new Layout();\r\n    this._settings = new Settings();\r\n    this._input = undefined;\r\n    this._keys = {};\r\n    this._keyStickingForMouse = {\r\n      isCapsLock: undefined,\r\n      specialKeys: [],\r\n    };\r\n    this._isCapsLockMouse = false;\r\n  }\r\n\r\n  // #region public methods\r\n  init() {\r\n    this._settings.load();\r\n    const layoutResult = this._layout.create(this._settings.getLanguage());\r\n    this._input = new Input(layoutResult.input, layoutResult.keys, this._settings.getLanguage());\r\n  }\r\n\r\n  run() {\r\n    const that = this;\r\n    document.addEventListener('keydown', (event) => {\r\n      that._keyDownEvent(event.code, event);\r\n      event.preventDefault();\r\n    });\r\n    document.addEventListener('keyup', (event) => {\r\n      that._keyUpEvent(event.code, event);\r\n    });\r\n    document.querySelector('.keyboard').addEventListener('click', (e) => {\r\n      // eslint-disable-next-line no-nested-ternary\r\n      const elementKey = e.target.classList.contains('key')\r\n        ? e.target\r\n        : e.target.classList.contains('key__text')\r\n          ? e.target.parentElement\r\n          : null;\r\n      if (!elementKey) return;\r\n\r\n      const keyCode = that._input.getKeyCodeByElement(elementKey);\r\n      that._keyMouseClickEvent(keyCode);\r\n    });\r\n  }\r\n  // #endregion public methods\r\n\r\n\r\n  // #region private methods\r\n  _keyDownEvent(eventCode, event) {\r\n    if (!this._keys[eventCode]) {\r\n      this._keys[eventCode] = true;\r\n      this._input.pressKey(eventCode, true);\r\n      this._setSettings(event.shiftKey, event.getModifierState('CapsLock'));\r\n    }\r\n    this._input.print(eventCode);\r\n  }\r\n\r\n  _keyUpEvent(eventCode, event) {\r\n    if (this._keys[eventCode]) {\r\n      this._keys[eventCode] = undefined;\r\n      const isCapsLock = event.getModifierState('CapsLock');\r\n      if (eventCode !== 'CapsLock' || !isCapsLock) {\r\n        this._input.pressKey(eventCode, false);\r\n      }\r\n      this._setSettings(event.shiftKey, isCapsLock);\r\n\r\n      if (this._checkChangeLanguage(eventCode)) {\r\n        const language = this._settings.changeAndGetLanguage();\r\n        this._input.changeLanguage(language, event.shiftKey, isCapsLock);\r\n      }\r\n\r\n      this._fixTwoShiftKeyUpEvent(event);\r\n      this._altKeyUpAnotherWindow(event);\r\n      this._ctrlKeyUpAnotherTab(event);\r\n    }\r\n  }\r\n\r\n  _keyMouseClickEvent(eventCode) {\r\n    if (eventCode === 'CapsLock') this._isCapsLockMouse = !this._isCapsLockMouse;\r\n    const isCapsLock = this._isCapsLockMouse;\r\n\r\n    const customEvent = {\r\n      getModifierState: () => isCapsLock,\r\n      shiftKey: window.event.shiftKey || this._checkStickingShiftForMouse(),\r\n      isMouseEvent: true,\r\n    };\r\n    if (Keyboard._checkShift(eventCode) || Keyboard._checkControl(eventCode)\r\n        || Keyboard._checkAlt(eventCode)) {\r\n      if (this._keyStickingForMouse.specialKeys.includes(eventCode)) {\r\n        this._keyStickingForMouse.specialKeys = this._keyStickingForMouse\r\n          .specialKeys.filter((o) => o !== eventCode);\r\n        if (Keyboard._checkShift(eventCode)) {\r\n          customEvent.shiftKey = window.event.shiftKey || this._checkStickingShiftForMouse();\r\n        }\r\n        this._keyUpEvent(eventCode, customEvent);\r\n      } else {\r\n        this._keyStickingForMouse.specialKeys.push(eventCode);\r\n        customEvent.shiftKey = window.event.shiftKey || this._checkStickingShiftForMouse();\r\n        this._keyDownEvent(eventCode, customEvent);\r\n      }\r\n    } else {\r\n      this._keyDownEvent(eventCode, customEvent);\r\n      customEvent.shiftKey = window.event.shiftKey;\r\n      this._keyUpEvent(eventCode, customEvent);\r\n      if (this._keyStickingForMouse.specialKeys.length) {\r\n        this._keyStickingForMouse.specialKeys.forEach((specialKey) => {\r\n          this._keyUpEvent(specialKey, customEvent);\r\n        });\r\n        this._keyStickingForMouse.specialKeys = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  _setSettings(isShift, isCapsLock) {\r\n    if (this._settings.changeSettingsShift(isShift)) {\r\n      this._input.setShift(isShift, isCapsLock);\r\n    }\r\n    if (this._settings.changeSettingsCaps(isCapsLock)) {\r\n      this._input.setCapsLock(isCapsLock, isShift);\r\n    }\r\n  }\r\n\r\n  _checkChangeLanguage(eventCode) {\r\n    return (Keyboard._checkShift(eventCode) && (this._keys.ControlLeft || this._keys.ControlRight))\r\n     || (Keyboard._checkControl(eventCode) && (this._keys.ShiftLeft || this._keys.ShiftRight));\r\n  }\r\n\r\n  static _checkShift(eventCode) {\r\n    return eventCode === 'ShiftLeft' || eventCode === 'ShiftRight';\r\n  }\r\n\r\n  static _checkControl(eventCode) {\r\n    return eventCode === 'ControlLeft' || eventCode === 'ControlRight';\r\n  }\r\n\r\n  static _checkAlt(eventCode) {\r\n    return eventCode === 'AltLeft' || eventCode === 'AltRight';\r\n  }\r\n\r\n  _checkStickingShiftForMouse() {\r\n    return this._keyStickingForMouse.specialKeys.includes('ShiftLeft')\r\n    || this._keyStickingForMouse.specialKeys.includes('ShiftRight');\r\n  }\r\n\r\n  _fixTwoShiftKeyUpEvent(event) {\r\n    if (!event.shiftKey) {\r\n      if (this._keys.ShiftLeft) {\r\n        this._input.pressKey('ShiftLeft', false);\r\n        this._keys.ShiftLeft = undefined;\r\n      }\r\n      if (this._keys.ShiftRight) {\r\n        this._input.pressKey('ShiftRight', false);\r\n        this._keys.ShiftRight = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  // При переключении между окнами Alt часто снимается не в браузере (Alt+Tab)\r\n  _altKeyUpAnotherWindow(event) {\r\n    if (!event.altKey) {\r\n      if (this._keys.AltLeft) {\r\n        this._input.pressKey('AltLeft', false);\r\n        this._keys.AltLeft = undefined;\r\n      }\r\n      if (this._keys.AltRight) {\r\n        this._input.pressKey('AltRight', false);\r\n        this._keys.AltRight = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  // При переключении между вкладками Alt часто снимается на другой вкладке (Ctrl+Tab)\r\n  _ctrlKeyUpAnotherTab(event) {\r\n    if (!event.ctrlKey) {\r\n      if (this._keys.ControlLeft) {\r\n        this._input.pressKey('ControlLeft', false);\r\n        this._keys.ControlLeft = undefined;\r\n      }\r\n      if (this._keys.ControlRight) {\r\n        this._input.pressKey('ControlRight', false);\r\n        this._keys.ControlRight = undefined;\r\n      }\r\n    }\r\n  }\r\n  // #endregion private methods\r\n}\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport const keysDictionary = {\r\n  '`': {\r\n    keyCode: 'Backquote',\r\n    ru: 'ё',\r\n    enUnShift: '`',\r\n    enShift: '~',\r\n  },\r\n  1: {\r\n    keyCode: 'Digit1',\r\n    ruUnShift: '1',\r\n    ruShift: '!',\r\n    enUnShift: '1',\r\n    enShift: '!',\r\n  },\r\n  2: {\r\n    keyCode: 'Digit2',\r\n    ruUnShift: '2',\r\n    ruShift: '\"',\r\n    enUnShift: '2',\r\n    enShift: '@',\r\n  },\r\n  3: {\r\n    keyCode: 'Digit3',\r\n    ruUnShift: '3',\r\n    ruShift: '№',\r\n    enUnShift: '3',\r\n    enShift: '#',\r\n  },\r\n  4: {\r\n    keyCode: 'Digit4',\r\n    ruUnShift: '4',\r\n    ruShift: ';',\r\n    enUnShift: '4',\r\n    enShift: '$',\r\n  },\r\n  5: {\r\n    keyCode: 'Digit5',\r\n    ruUnShift: '5',\r\n    ruShift: '%',\r\n    enUnShift: '5',\r\n    enShift: '%',\r\n  },\r\n  6: {\r\n    keyCode: 'Digit6',\r\n    ruUnShift: '6',\r\n    ruShift: ':',\r\n    enUnShift: '6',\r\n    enShift: '^',\r\n  },\r\n  7: {\r\n    keyCode: 'Digit7',\r\n    ruUnShift: '7',\r\n    ruShift: '?',\r\n    enUnShift: '7',\r\n    enShift: '&',\r\n  },\r\n  8: {\r\n    keyCode: 'Digit8',\r\n    ruUnShift: '8',\r\n    ruShift: '*',\r\n    enUnShift: '8',\r\n    enShift: '*',\r\n  },\r\n  9: {\r\n    keyCode: 'Digit9',\r\n    ruUnShift: '9',\r\n    ruShift: '(',\r\n    enUnShift: '9',\r\n    enShift: '(',\r\n  },\r\n  0: {\r\n    keyCode: 'Digit0',\r\n    ruUnShift: '0',\r\n    ruShift: ')',\r\n    enUnShift: '0',\r\n    enShift: ')',\r\n  },\r\n  '-': {\r\n    keyCode: 'Minus',\r\n    ruUnShift: '-',\r\n    ruShift: '_',\r\n    enUnShift: '-',\r\n    enShift: '_',\r\n  },\r\n  '=': {\r\n    keyCode: 'Equal',\r\n    ruUnShift: '=',\r\n    ruShift: '+',\r\n    enUnShift: '=',\r\n    enShift: '+',\r\n  },\r\n  Backspace: {\r\n    keyCode: 'Backspace',\r\n  },\r\n  Tab: {\r\n    keyCode: 'Tab',\r\n  },\r\n  q: {\r\n    keyCode: 'KeyQ',\r\n    ru: 'й',\r\n    en: 'q',\r\n  },\r\n  w: {\r\n    keyCode: 'KeyW',\r\n    ru: 'ц',\r\n    en: 'w',\r\n  },\r\n  e: {\r\n    keyCode: 'KeyE',\r\n    ru: 'у',\r\n    en: 'e',\r\n  },\r\n  r: {\r\n    keyCode: 'KeyR',\r\n    ru: 'к',\r\n    en: 'r',\r\n  },\r\n  t: {\r\n    keyCode: 'KeyT',\r\n    ru: 'е',\r\n    en: 't',\r\n  },\r\n  y: {\r\n    keyCode: 'KeyY',\r\n    ru: 'н',\r\n    en: 'y',\r\n  },\r\n  u: {\r\n    keyCode: 'KeyU',\r\n    ru: 'г',\r\n    en: 'u',\r\n  },\r\n  i: {\r\n    keyCode: 'KeyI',\r\n    ru: 'ш',\r\n    en: 'i',\r\n  },\r\n  o: {\r\n    keyCode: 'KeyO',\r\n    ru: 'щ',\r\n    en: 'o',\r\n  },\r\n  p: {\r\n    keyCode: 'KeyP',\r\n    ru: 'з',\r\n    en: 'p',\r\n  },\r\n  '[': {\r\n    keyCode: 'BracketLeft',\r\n    ru: 'х',\r\n    enUnShift: '[',\r\n    enShift: '{',\r\n  },\r\n  ']': {\r\n    keyCode: 'BracketRight',\r\n    ru: 'ъ',\r\n    enUnShift: ']',\r\n    enShift: '}',\r\n  },\r\n  '\\\\': {\r\n    keyCode: 'Backslash',\r\n    ruUnShift: '\\\\',\r\n    ruShift: '/',\r\n    enUnShift: '\\\\',\r\n    enShift: '|',\r\n  },\r\n  CapsLock: {\r\n    keyCode: 'CapsLock',\r\n  },\r\n  a: {\r\n    keyCode: 'KeyA',\r\n    ru: 'ф',\r\n    en: 'a',\r\n  },\r\n  s: {\r\n    keyCode: 'KeyS',\r\n    ru: 'ы',\r\n    en: 's',\r\n  },\r\n  d: {\r\n    keyCode: 'KeyD',\r\n    ru: 'в',\r\n    en: 'd',\r\n  },\r\n  f: {\r\n    keyCode: 'KeyF',\r\n    ru: 'а',\r\n    en: 'f',\r\n  },\r\n  g: {\r\n    keyCode: 'KeyG',\r\n    ru: 'п',\r\n    en: 'g',\r\n  },\r\n  h: {\r\n    keyCode: 'KeyH',\r\n    ru: 'р',\r\n    en: 'h',\r\n  },\r\n  j: {\r\n    keyCode: 'KeyJ',\r\n    ru: 'о',\r\n    en: 'j',\r\n  },\r\n  k: {\r\n    keyCode: 'KeyK',\r\n    ru: 'л',\r\n    en: 'k',\r\n  },\r\n  l: {\r\n    keyCode: 'KeyL',\r\n    ru: 'д',\r\n    en: 'l',\r\n  },\r\n  ';': {\r\n    keyCode: 'Semicolon',\r\n    ru: 'ж',\r\n    enUnShift: ';',\r\n    enShift: ':',\r\n  },\r\n  '\\'': {\r\n    keyCode: 'Quote',\r\n    ru: 'э',\r\n    enUnShift: '\\'',\r\n    enShift: '\"',\r\n  },\r\n  ShiftLeft: {\r\n    keyCode: 'ShiftLeft',\r\n  },\r\n  z: {\r\n    keyCode: 'KeyZ',\r\n    ru: 'я',\r\n    en: 'z',\r\n  },\r\n  x: {\r\n    keyCode: 'KeyX',\r\n    ru: 'ч',\r\n    en: 'x',\r\n  },\r\n  c: {\r\n    keyCode: 'KeyC',\r\n    ru: 'с',\r\n    en: 'c',\r\n  },\r\n  v: {\r\n    keyCode: 'KeyV',\r\n    ru: 'м',\r\n    en: 'v',\r\n  },\r\n  b: {\r\n    keyCode: 'KeyB',\r\n    ru: 'и',\r\n    en: 'b',\r\n  },\r\n  n: {\r\n    keyCode: 'KeyN',\r\n    ru: 'т',\r\n    en: 'n',\r\n  },\r\n  m: {\r\n    keyCode: 'KeyM',\r\n    ru: 'ь',\r\n    en: 'm',\r\n  },\r\n  ',': {\r\n    keyCode: 'Slash',\r\n    ru: 'б',\r\n    enUnShift: ',',\r\n    enShift: '<',\r\n  },\r\n  '.': {\r\n    keyCode: 'Period',\r\n    ru: 'ю',\r\n    enUnShift: '.',\r\n    enShift: '>',\r\n  },\r\n  '/': {\r\n    keyCode: 'Comma',\r\n    ruUnShift: '.',\r\n    ruShift: ',',\r\n    enUnShift: '/',\r\n    enShift: '?',\r\n  },\r\n  Enter: {\r\n    keyCode: 'Enter',\r\n  },\r\n  NumpadEnter: {\r\n    keyCode: 'Enter',\r\n  },\r\n  Delete: {\r\n    keyCode: 'Delete',\r\n  },\r\n  ShiftRight: {\r\n    keyCode: 'ShiftRight',\r\n  },\r\n  ControlLeft: {\r\n    keyCode: 'ControlLeft',\r\n  },\r\n  MetaLeft: {\r\n    keyCode: 'MetaLeft',\r\n  },\r\n  AltLeft: {\r\n    keyCode: 'AltLeft',\r\n  },\r\n  Space: {\r\n    keyCode: 'Space',\r\n    ru: ' ',\r\n    en: ' ',\r\n  },\r\n  AltRight: {\r\n    keyCode: 'AltRight',\r\n  },\r\n  ControlRight: {\r\n    keyCode: 'ControlRight',\r\n  },\r\n  '▲': {\r\n    keyCode: 'ArrowUp',\r\n    ru: '▲',\r\n    en: '▲',\r\n  },\r\n  '◄': {\r\n    keyCode: 'ArrowLeft',\r\n    ru: '◄',\r\n    en: '◄',\r\n  },\r\n  '▼': {\r\n    keyCode: 'ArrowDown',\r\n    ru: '▼',\r\n    en: '▼',\r\n  },\r\n  '►': {\r\n    keyCode: 'ArrowRight',\r\n    ru: '►',\r\n    en: '►',\r\n  },\r\n};\r\n","import { keysDictionary } from './Keys';\r\n\r\nexport default class Layout {\r\n  constructor() {\r\n    this._body = document.querySelector('body');\r\n    this._keys = {};\r\n  }\r\n\r\n  // #region public methods\r\n  create(language) {\r\n    this._language = language;\r\n    const wrapper = Layout._createWrapper();\r\n    this._body.appendChild(wrapper);\r\n    const input = Layout._createInput();\r\n    wrapper.appendChild(input);\r\n    wrapper.appendChild(this._createKeyboard());\r\n    wrapper.appendChild(Layout._createDescription());\r\n\r\n    return { input, keys: this._keys };\r\n  }\r\n  // #endregion public methods\r\n\r\n  // #region private methods\r\n  static _createWrapper() {\r\n    const wrapper = document.createElement('div');\r\n    wrapper.classList.add('wrapper');\r\n    return wrapper;\r\n  }\r\n\r\n  static _createInput() {\r\n    const input = document.createElement('textarea');\r\n    input.rows = 6;\r\n    input.cols = 60;\r\n    input.classList.add('input');\r\n    return input;\r\n  }\r\n\r\n  _createKeyboard() {\r\n    const keyboard = document.createElement('div');\r\n    keyboard.classList.add('keyboard');\r\n    keyboard.appendChild(this._createKeysRow(1));\r\n    keyboard.appendChild(this._createKeysRow(2));\r\n    keyboard.appendChild(this._createKeysRow(3));\r\n    keyboard.appendChild(this._createKeysRow(4));\r\n    keyboard.appendChild(this._createKeysRow(5));\r\n    this._createDublicateKeys();\r\n    return keyboard;\r\n  }\r\n\r\n  _createKeysRow(rowNumber) {\r\n    const that = this;\r\n    const keyboardRow = document.createElement('div');\r\n    keyboardRow.classList.add('keyboard__row');\r\n    switch (rowNumber) {\r\n      case 1: {\r\n        ['`', 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, '-', '='].forEach((text) => {\r\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'char'));\r\n        });\r\n        keyboardRow.appendChild(that._createKey(this._getKey('Backspace'), 'special', 'backspace'));\r\n        break;\r\n      }\r\n      case 2: {\r\n        keyboardRow.appendChild(that._createKey(this._getKey('Tab'), 'special', 'tab'));\r\n        ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'].forEach((text) => {\r\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'letter'));\r\n        });\r\n        ['[', ']', '\\\\'].forEach((text) => {\r\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'char'));\r\n        });\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Del', 'Delete'), 'special', 'del'));\r\n        break;\r\n      }\r\n      case 3: {\r\n        keyboardRow.appendChild(that._createKey(this._getKey('CapsLock'), 'special', 'capslock'));\r\n        ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'].forEach((text) => {\r\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'letter'));\r\n        });\r\n        [';', '\\''].forEach((text) => {\r\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'char'));\r\n        });\r\n        keyboardRow.appendChild(that._createKey(this._getKey('Enter'), 'special', 'enter'));\r\n        break;\r\n      }\r\n      case 4: {\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Shift', 'ShiftLeft'), 'special', 'shift-left'));\r\n        ['z', 'x', 'c', 'v', 'b', 'n', 'm'].forEach((text) => {\r\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'letter'));\r\n        });\r\n        [',', '.', '/'].forEach((text) => {\r\n          keyboardRow.appendChild(that._createKey(this._getKey(text), 'char'));\r\n        });\r\n        keyboardRow.appendChild(that._createKey(this._getKey('▲'), 'special', 'arrow'));\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Shift', 'ShiftRight'), 'special', 'shift-right'));\r\n        break;\r\n      }\r\n      case 5: {\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Ctrl', 'ControlLeft'), 'special', 'ctrl-left'));\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Win', 'MetaLeft'), 'special', 'win'));\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Alt', 'AltLeft'), 'special', 'alt-left'));\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode(' ', 'Space'), 'space'));\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Alt', 'AltRight'), 'special', 'alt-right'));\r\n        keyboardRow.appendChild(that._createKey(this._getKey('◄'), 'special', 'arrow'));\r\n        keyboardRow.appendChild(that._createKey(this._getKey('▼'), 'special', 'arrow'));\r\n        keyboardRow.appendChild(that._createKey(this._getKey('►'), 'special', 'arrow'));\r\n        keyboardRow.appendChild(that._createKey(this._getKeyWithCode('Ctrl', 'ControlRight'), 'special', 'ctrl-right'));\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    return keyboardRow;\r\n  }\r\n\r\n  _createKey(key, ...additionalClasses) {\r\n    const keyDiv = document.createElement('div');\r\n    keyDiv.classList.add('key');\r\n    if (additionalClasses.length) {\r\n      additionalClasses.forEach((addClass) => keyDiv.classList.add(addClass));\r\n    }\r\n    keyDiv.appendChild(Layout._createKeyText(key.text));\r\n    // eslint-disable-next-line no-param-reassign\r\n    key.element = keyDiv;\r\n    this._keys[key.keyCode] = key;\r\n    return keyDiv;\r\n  }\r\n\r\n  static _createKeyText(text) {\r\n    const keySpan = document.createElement('span');\r\n    keySpan.classList.add('key__text');\r\n    keySpan.textContent = text;\r\n    return keySpan;\r\n  }\r\n\r\n  _createDublicateKeys() {\r\n    this._keys.NumpadEnter = this._keys.Enter;\r\n    // для задания не требуется, поэтому делаю не совсем верно, для удобства\r\n    this._keys.Numpad1 = this._keys.Digit1;\r\n    this._keys.Numpad2 = this._keys.Digit2;\r\n    this._keys.Numpad3 = this._keys.Digit3;\r\n    this._keys.Numpad4 = this._keys.Digit4;\r\n    this._keys.Numpad5 = this._keys.Digit5;\r\n    this._keys.Numpad6 = this._keys.Digit6;\r\n    this._keys.Numpad7 = this._keys.Digit7;\r\n    this._keys.Numpad8 = this._keys.Digit8;\r\n    this._keys.Numpad9 = this._keys.Digit9;\r\n    this._keys.Numpad0 = this._keys.Digit0;\r\n    this._keys.NumpadDivide = this._keys.Slash;\r\n    // this._keys['NumpadMultiply'] = this._keys[''];\r\n    this._keys.NumpadSubtract = this._keys.Minus;\r\n    // this._keys['NumpadAdd'] = this._keys[''];\r\n    this._keys.NumpadDecimal = this._keys.Period;\r\n  }\r\n\r\n  static _createDescription() {\r\n    const descriptionSpan = document.createElement('span');\r\n    descriptionSpan.classList.add('description-text');\r\n    descriptionSpan.textContent = 'Переключение языка Ctrl+Shift, OS - Windows';\r\n    return descriptionSpan;\r\n  }\r\n\r\n  _getKey(text) {\r\n    const key = keysDictionary[text] ? keysDictionary[text] : {};\r\n    key.text = key[this._language.nameUnShift] || key[this._language.name] || text;\r\n    return key;\r\n  }\r\n\r\n  _getKeyWithCode(text, code) {\r\n    const key = keysDictionary[code] ? keysDictionary[code] : {};\r\n    key.text = key[this._language.nameUnShift] || key[this._language.name] || text;\r\n    return key;\r\n  }\r\n  // #private methods\r\n}\r\n","export const languages = {\r\n  ru: {\r\n    name: 'ru',\r\n    nameShift: 'ruShift',\r\n    nameUnShift: 'ruUnShift',\r\n  },\r\n  en: {\r\n    name: 'en',\r\n    nameShift: 'enShift',\r\n    nameUnShift: 'enUnShift',\r\n  },\r\n};\r\nexport class Settings {\r\n  constructor() {\r\n    this._isShift = false;\r\n    this._isCapsLock = false;\r\n    this._language = languages.en;\r\n  }\r\n\r\n  load() {\r\n    const language = sessionStorage.getItem('language');\r\n    switch (language) {\r\n      case languages.ru.name:\r\n        this._language = languages.ru;\r\n        break;\r\n      default:\r\n        this._language = languages.en;\r\n    }\r\n  }\r\n\r\n  changeSettingsShift(isShift) {\r\n    if (this._isShift !== isShift) {\r\n      this._isShift = isShift;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  changeSettingsCaps(isCapsLock) {\r\n    if (this.isCapsLock !== isCapsLock) {\r\n      this.isCapsLock = isCapsLock;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  changeAndGetLanguage() {\r\n    this._language = this._language === languages.en ? languages.ru : languages.en;\r\n    sessionStorage.setItem('language', this._language.name);\r\n    return this._language;\r\n  }\r\n\r\n  getLanguage() {\r\n    return this._language;\r\n  }\r\n}\r\n","import Keyboard from './Keyboard';\r\n\r\nwindow.onload = () => {\r\n  const keyboard = new Keyboard();\r\n  keyboard.init();\r\n  keyboard.run();\r\n};\r\n"],"sourceRoot":""}